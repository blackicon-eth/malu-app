import { ExtensionMessageType, } from "../../../web-proof-commons/index.js";
// this id is fixed in the extension by the key in manifest.json
const EXTENSION_ID = "jbchhcgphfokabmfacnkafoeeeppjmpl";
class ExtensionWebProofProvider {
    notaryUrl;
    wsProxyUrl;
    port = null;
    constructor(notaryUrl, wsProxyUrl) {
        this.notaryUrl = notaryUrl;
        this.wsProxyUrl = wsProxyUrl;
    }
    notifyZkProvingStatus(status) {
        if (typeof chrome !== "undefined") {
            this.connectToExtension().postMessage({
                action: 1 /* ExtensionAction.NotifyZkProvingStatus */,
                payload: { status },
            });
        }
        else {
            console.log("Run out of chrome context");
        }
    }
    connectToExtension() {
        if (!this.port) {
            this.port = chrome.runtime.connect(EXTENSION_ID);
        }
        return this.port;
    }
    async getWebProof(webProofSetup) {
        return new Promise((resolve, reject) => {
            chrome.runtime.sendMessage(EXTENSION_ID, {
                action: 0 /* ExtensionAction.RequestWebProof */,
                payload: {
                    notaryUrl: this.notaryUrl,
                    wsProxyUrl: this.wsProxyUrl,
                    logoUrl: webProofSetup.logoUrl,
                    steps: webProofSetup.steps,
                },
            });
            this.connectToExtension().onMessage.addListener((message) => {
                if (message.type === ExtensionMessageType.ProofDone) {
                    resolve(message.proof);
                }
                if (message.type === ExtensionMessageType.ProofError) {
                    reject(new Error(message.error));
                }
            });
        });
    }
}
export const createExtensionWebProofProvider = ({ notaryUrl = "https://notary.pse.dev/v0.1.0-alpha.5/", wsProxyUrl = "wss://notary.pse.dev/proxy", } = {}) => {
    return new ExtensionWebProofProvider(notaryUrl, wsProxyUrl);
};
